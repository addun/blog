---
export const prerender = true;

import { getCollection } from "astro:content";
import PostIntro from "@components/PostIntro.astro";
import Donation from "@components/Donation.astro";
import Comments from "@components/Comments.astro";
import { GitHubLink } from "@components/GitHubLink";
import BaseLayout from "@layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");

  return blogEntries.map((entry) => ({
    params: {
      id: entry.data.id,
      slug: entry.slug,
    },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { description, thumbnail, title, repository, date, modified, id } = Astro.props.entry.data;
const { Content } = await entry.render();
---

<BaseLayout>
  <Fragment slot="head">
    <title>{title}</title>

    <meta name="title" content={title} />
    <meta property="og:title" content={title} />

    <meta name="description" content={description} />
    <meta name="og:description" content={description} />

    <meta property="og:url" content={Astro.url} />
    <meta property="og:image" content={thumbnail.src} />
    <meta property="og:image:width" content={thumbnail.width.toString()} />
    <meta property="og:image:height" content={thumbnail.height.toString()} />
    <meta property="og:image:type" content={thumbnail.format} />

    <meta property="og:type" content="article" />
    <meta property="article:published_time" content={date.toISOString()} />
    <meta property="article:modified_time" content={modified.toISOString()} />
  </Fragment>

  <main class="mx-2 md:mx-4">
    <PostIntro {entry} />

    {!!repository && <GitHubLink repository={repository} />}

    <article class="prose dark:prose-invert lg:prose-xl max-w-none">
      <Content />
    </article>

    <Donation />
    <Comments term={id} />
  </main>
</BaseLayout>

<style is:global>
  .expressive-code + .expressive-code {
    @apply mt-5;
  }
</style>
